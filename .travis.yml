language: go
dist: xenial
sudo: true
services:
  - docker
env:
  matrix:
  - GO111MODULE=on
matrix:
  allow_failures:
  - go: master
  include:
  - os: linux
    go: 1.13.x
    cache:
      directories:
      - "/home/travis/.cache/go-build"
  - os: linux
    go: master
  - os: osx
    go: 1.13.x
    cache:
      directories:
      - "/Users/travis/Library/Caches/go-build"
  # - os: windows
  #   go: 1.13.x
before_install:
  # Setup directory for binaries
  - mkdir ./bin
  - export PATH=$PATH:$PWD/bin
  # Misspell
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O misspell.tar.gz https://github.com/client9/misspell/releases/download/v0.3.4/misspell_0.3.4_linux_64bit.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O misspell.tar.gz https://github.com/client9/misspell/releases/download/v0.3.4/misspell_0.3.4_mac_64bit.tar.gz; fi
  - tar xf misspell.tar.gz && cp ./misspell ./bin/misspell
  # staticcheck
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O staticcheck.tar.gz https://github.com/dominikh/go-tools/releases/download/2019.2.2/staticcheck_linux_amd64.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O staticcheck.tar.gz https://github.com/dominikh/go-tools/releases/download/2019.2.2/staticcheck_darwin_amd64.tar.gz; fi
  - tar xf staticcheck.tar.gz && cp ./staticcheck/staticcheck ./bin/staticcheck
  # golint
  - go get -u golang.org/x/lint/golint
  # gocyclo
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O ./bin/gocyclo https://github.com/adamdecaf/gocyclo/releases/download/2019-08-09/gocyclo-linux-amd64; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O ./bin/gocyclo https://github.com/adamdecaf/gocyclo/releases/download/2019-08-09/gocyclo-darwin-amd64; fi
  - chmod +x ./bin/gocyclo
before_script:
  - GOFILES=$(find . -type f -name '*.go' | grep -v vendor | grep -v client)
  - go mod graph
script:
  # Just check gofmt on linux, it's the fastest builder
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then test -z $(gofmt -s -l $GOFILES); fi
  - go test ./... -race -coverprofile=coverage.txt -covermode=atomic
  - misspell -error -locale US $GOFILES
  - gocyclo -over 20 $GOFILES
  - golint -set_exit_status $GOFILES
  - staticcheck ./cmd/... ./internal/... .
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then choco install -y mingw; export PATH=/c/tools/mingw64/bin:"$PATH";fi
after_success:
  - bash <(curl -s https://codecov.io/bash) -X fix
  - make
  - make client
  - make docker
before_deploy:
  - make dist
deploy:
  provider: releases
  api_key:
    secure: Ai7efi3yilhxCCjCW6QSQrkk0aYF6unjBDdVywotXg1jTzrNnL1KFPR7vK5AHcU9iakhSrvRYY/wYHs9MV/al+FmTEBHD5QB5+V7QdqiOVVCDjbItP3M16ni14q5s2MwfPsgELIAJoKGIgjdJ7Rwbtd04Oqa1GmA4BzVkr+0TIbbRO85ds7jZUUnpQY3T0MGT8sPoLr4K/iBj6M9BLDlT6j9sEWjVscFkNlN5Q9q7M3/QyZvRlASvXg6FaBhDud1Sn0AOAOJLu0Nq4rv3ZK9+PeURovNalFcq20EwHyoan9IacZ73nPWerwov2JMWBCVcdGffmkZ2DlUa/T15kQkrflPn48CSn1hq5jut9yZpNg7a+BTEOSdlzSb78aS10JRjQ5Ke0Y/6xc5bIeKzgWeICpSGkl1A3rQ6DN8ZRL3gIfx4FfaBDoszQcZQFrmMm21g/QdN1m+MxP9U5bEODWdl9PAo27n11UY5ItMymHw5qaGw3HXUbHk7X+qUHjEWtW/z4dQQJMAzfXCWrx92tEavFE9/gvYtybpn1dfw1O2FlxCxSCkk2AejC/E6RMCgGaDV3SvIzYn+ai0ijwn8o4/fKoaKc8vjIpCDXGvWxAfBkhFRkQ38n3fpBhgYp8THD98jU3XNXsN0ltFfCEJQ3KpPGyCUbbvBnsqPvols0HuaX4=
  file_glob: true
  file:
    - bin/customers-*
  on:
    repo: moov-io/customers
    tags: true
    go: 1.13.x
  skip_cleanup: true
after_deploy:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - make release-push
